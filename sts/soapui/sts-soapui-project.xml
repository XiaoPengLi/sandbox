<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="sts" resourceRoot="" soapui-version="3.6.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="SecurityTokenServiceSOAP" type="wsdl" bindingName="{http://docs.oasis-open.org/ws-sx/ws-trust/200512/wsdl}SecurityTokenServiceSOAP" soapVersion="1_1" anonymous="optional" definition="file:/Users/dwolz/git/sandbox/sts/src/main/resources/model/ws-trust-1.4-service.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/dwolz/git/sandbox/sts/src/main/resources/model/ws-trust-1.4-service.wsdl"><con:part><con:url>file:/Users/dwolz/git/sandbox/sts/src/main/resources/model/ws-trust-1.4-service.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://docs.oasis-open.org/ws-sx/ws-trust/200512/wsdl" xmlns:tns="http://docs.oasis-open.org/ws-sx/ws-trust/200512/wsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:import namespace="http://docs.oasis-open.org/ws-sx/ws-trust/200512/wsdl" location="ws-trust-1.4.wsdl"/>
  <wsdl:binding name="SecurityTokenServiceSOAP" type="tns:SecurityTokenService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="Cancel">
      <soap:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Cancel"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Issue">
      <soap:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Renew">
      <soap:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Renew"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Validate">
      <soap:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Validate"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="KeyExchangeToken">
      <soap:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/KeyExchangeToken"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RequestCollection">
      <soap:operation soapAction="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/RequestCollection"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SecurityTokenServiceProvider">
    <wsdl:port binding="tns:SecurityTokenServiceSOAP" name="SecurityTokenServiceSOAP">
      <soap:address location="http://localhost:18080/SecurityTokenServiceProvider/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/Users/dwolz/git/sandbox/sts/src/main/resources/model/ws-trust-1.4.wsdl</con:url><con:content><![CDATA[<!--OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS's procedures with respect to rights in OASIS specifications can be found at the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification, can be obtained from the OASIS Executive Director.
OASIS invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to implement this specification. Please address the information to the OASIS Executive Director.
Copyright Â© OASIS Open 2002-2006. All Rights Reserved.
This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself does not be modified in any way, such as by removing the copyright notice or references to OASIS, except as needed for the purpose of developing OASIS specifications, in which case the procedures for copyrights defined in the OASIS Intellectual Property Rights document must be followed, or as required to translate it into languages other than English.
The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns.
This document and the information contained herein is provided on an AS IS basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.-->
<wsdl:definitions targetNamespace="http://docs.oasis-open.org/ws-sx/ws-trust/200512/wsdl" xmlns:tns="http://docs.oasis-open.org/ws-sx/ws-trust/200512/wsdl" xmlns:wst="http://docs.oasis-open.org/ws-sx/ws-trust/200512" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata">
  <!--this is the WS-I BP-compliant way to import a schema-->
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://docs.oasis-open.org/ws-sx/ws-trust/200512" schemaLocation="ws-trust-1.3.xsd"/>
    </xs:schema>
  </wsdl:types>
  <!--WS-Trust defines the following GEDs-->
  <wsdl:message name="RequestSecurityTokenMsg">
    <wsdl:part name="request" element="wst:RequestSecurityToken"/>
  </wsdl:message>
  <wsdl:message name="RequestSecurityTokenResponseMsg">
    <wsdl:part name="response" element="wst:RequestSecurityTokenResponse"/>
  </wsdl:message>
  <wsdl:message name="RequestSecurityTokenCollectionMsg">
    <wsdl:part name="requestCollection" element="wst:RequestSecurityTokenCollection"/>
  </wsdl:message>
  <wsdl:message name="RequestSecurityTokenResponseCollectionMsg">
    <wsdl:part name="responseCollection" element="wst:RequestSecurityTokenResponseCollection"/>
  </wsdl:message>
  <!--This portType an example of a Requestor (or other) endpoint that 
         Accepts SOAP-based challenges from a Security Token Service-->
  <wsdl:portType name="WSSecurityRequestor">
    <wsdl:operation name="Challenge">
      <wsdl:input message="tns:RequestSecurityTokenResponseMsg"/>
      <wsdl:output message="tns:RequestSecurityTokenResponseMsg"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--This portType is an example of an STS supporting full protocol-->
  <wsdl:portType name="SecurityTokenService">
    <wsdl:operation name="Cancel">
      <wsdl:input wsam:Action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Cancel" message="tns:RequestSecurityTokenMsg"/>
      <wsdl:output wsam:Action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/CancelFinal" message="tns:RequestSecurityTokenResponseMsg"/>
    </wsdl:operation>
    <wsdl:operation name="Issue">
      <wsdl:input wsam:Action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" message="tns:RequestSecurityTokenMsg"/>
      <wsdl:output wsam:Action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTRC/IssueFinal" message="tns:RequestSecurityTokenResponseCollectionMsg"/>
    </wsdl:operation>
    <wsdl:operation name="Renew">
      <wsdl:input wsam:Action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Renew" message="tns:RequestSecurityTokenMsg"/>
      <wsdl:output wsam:Action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/RenewFinal" message="tns:RequestSecurityTokenResponseMsg"/>
    </wsdl:operation>
    <wsdl:operation name="Validate">
      <wsdl:input wsam:Action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Validate" message="tns:RequestSecurityTokenMsg"/>
      <wsdl:output wsam:Action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/ValidateFinal" message="tns:RequestSecurityTokenResponseMsg"/>
    </wsdl:operation>
    <wsdl:operation name="KeyExchangeToken">
      <wsdl:input wsam:Action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/KET" message="tns:RequestSecurityTokenMsg"/>
      <wsdl:output wsam:Action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/KETFinal" message="tns:RequestSecurityTokenResponseMsg"/>
    </wsdl:operation>
    <wsdl:operation name="RequestCollection">
      <wsdl:input message="tns:RequestSecurityTokenCollectionMsg"/>
      <wsdl:output message="tns:RequestSecurityTokenResponseCollectionMsg"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--This portType is an example of an endpoint that accepts 
         Unsolicited RequestSecurityTokenResponse messages-->
  <wsdl:portType name="SecurityTokenResponseService">
    <wsdl:operation name="RequestSecurityTokenResponse">
      <wsdl:input message="tns:RequestSecurityTokenResponseMsg"/>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/Users/dwolz/git/sandbox/sts/src/main/resources/model/ws-trust-1.3.xsd</con:url><con:content><![CDATA[<!--OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS's procedures with respect to rights in OASIS specifications can be found at the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification, can be obtained from the OASIS Executive Director.
OASIS invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to implement this specification. Please address the information to the OASIS Executive Director.
Copyright Â© OASIS Open 2002-2006. All Rights Reserved.
This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself does not be modified in any way, such as by removing the copyright notice or references to OASIS, except as needed for the purpose of developing OASIS specifications, in which case the procedures for copyrights defined in the OASIS Intellectual Property Rights document must be followed, or as required to translate it into languages other than English.
The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns.
This document and the information contained herein is provided on an AS IS basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.-->
<xs:schema targetNamespace="http://docs.oasis-open.org/ws-sx/ws-trust/200512" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wst="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
  <xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" schemaLocation="oasis-200401-wss-wssecurity-secext-1.0.xsd"/>
  <xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" schemaLocation="oasis-200401-wss-wssecurity-utility-1.0.xsd"/>
  <xs:import namespace="http://schemas.xmlsoap.org/ws/2004/09/policy" schemaLocation="ws-policy.xsd"/>
  <xs:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="ws-addr.xsd"/>
  <!--WS-Trust Section 3.1-->
  <xs:element name="RequestSecurityToken" type="wst:RequestSecurityTokenType"/>
  <xs:complexType name="RequestSecurityTokenType">
    <xs:annotation>
      <xs:documentation><![CDATA[Actual content model is non-deterministic, hence wildcard. The following shows intended content model:

        <xs:element ref='wst:TokenType' minOccurs='0' />
        <xs:element ref='wst:RequestType' />
        <xs:element ref='wsp:AppliesTo' minOccurs='0' />
        <xs:element ref='wst:Claims' minOccurs='0' />
        <xs:element ref='wst:Entropy' minOccurs='0' />
        <xs:element ref='wst:Lifetime' minOccurs='0' />
        <xs:element ref='wst:AllowPostdating' minOccurs='0' />
        <xs:element ref='wst:Renewing' minOccurs='0' />
        <xs:element ref='wst:OnBehalfOf' minOccurs='0' />
        <xs:element ref='wst:Issuer' minOccurs='0' />
        <xs:element ref='wst:AuthenticationType' minOccurs='0' />
        <xs:element ref='wst:KeyType' minOccurs='0' />
        <xs:element ref='wst:KeySize' minOccurs='0' />
        <xs:element ref='wst:SignatureAlgorithm' minOccurs='0' />
        <xs:element ref='wst:Encryption' minOccurs='0' />
        <xs:element ref='wst:EncryptionAlgorithm' minOccurs='0' />
        <xs:element ref='wst:CanonicalizationAlgorithm' minOccurs='0' />
        <xs:element ref='wst:ProofEncryption' minOccurs='0' />
        <xs:element ref='wst:UseKey' minOccurs='0' />
        <xs:element ref='wst:SignWith' minOccurs='0' />
        <xs:element ref='wst:EncryptWith' minOccurs='0' />
        <xs:element ref='wst:DelegateTo' minOccurs='0' />
        <xs:element ref='wst:Forwardable' minOccurs='0' />
        <xs:element ref='wst:Delegatable' minOccurs='0' />
        <xs:element ref='wsp:Policy' minOccurs='0' />
        <xs:element ref='wsp:PolicyReference' minOccurs='0' />
        <xs:any namespace='##other' processContents='lax' minOccurs='0' maxOccurs='unbounded' />]]]]>><![CDATA[</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Context" type="xs:anyURI" use="optional"/>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="TokenType" type="xs:anyURI"/>
  <xs:element name="RequestType" type="wst:RequestTypeOpenEnum"/>
  <xs:simpleType name="RequestTypeOpenEnum">
    <xs:union memberTypes="wst:RequestTypeEnum xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RequestTypeEnum">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue"/>
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/Renew"/>
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/Cancel"/>
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/STSCancel"/>
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/Validate"/>
    </xs:restriction>
  </xs:simpleType>
  <!--WS-Trust Section 3.2-->
  <xs:element name="RequestSecurityTokenResponse" type="wst:RequestSecurityTokenResponseType"/>
  <xs:complexType name="RequestSecurityTokenResponseType">
    <xs:annotation>
      <xs:documentation><![CDATA[Actual content model is non-deterministic, hence wildcard. The following shows intended content model:

        <xs:element ref='wst:TokenType' minOccurs='0' />
        <xs:element ref='wst:RequestType' />
        <xs:element ref='wst:RequestedSecurityToken'  minOccurs='0' />
        <xs:element ref='wsp:AppliesTo' minOccurs='0' />
        <xs:element ref='wst:RequestedAttachedReference' minOccurs='0' />
        <xs:element ref='wst:RequestedUnattachedReference' minOccurs='0' />
        <xs:element ref='wst:RequestedProofToken' minOccurs='0' />
        <xs:element ref='wst:Entropy' minOccurs='0' />
        <xs:element ref='wst:Lifetime' minOccurs='0' />
        <xs:element ref='wst:Status' minOccurs='0' />
        <xs:element ref='wst:AllowPostdating' minOccurs='0' />
        <xs:element ref='wst:Renewing' minOccurs='0' />
        <xs:element ref='wst:OnBehalfOf' minOccurs='0' />
        <xs:element ref='wst:Issuer' minOccurs='0' />
        <xs:element ref='wst:AuthenticationType' minOccurs='0' />
        <xs:element ref='wst:Authenticator' minOccurs='0' />
        <xs:element ref='wst:KeyType' minOccurs='0' />
        <xs:element ref='wst:KeySize' minOccurs='0' />
        <xs:element ref='wst:SignatureAlgorithm' minOccurs='0' />
        <xs:element ref='wst:Encryption' minOccurs='0' />
        <xs:element ref='wst:EncryptionAlgorithm' minOccurs='0' />
        <xs:element ref='wst:CanonicalizationAlgorithm' minOccurs='0' />
        <xs:element ref='wst:ProofEncryption' minOccurs='0' />
        <xs:element ref='wst:UseKey' minOccurs='0' />
        <xs:element ref='wst:SignWith' minOccurs='0' />
        <xs:element ref='wst:EncryptWith' minOccurs='0' />
        <xs:element ref='wst:DelegateTo' minOccurs='0' />
        <xs:element ref='wst:Forwardable' minOccurs='0' />
        <xs:element ref='wst:Delegatable' minOccurs='0' />
        <xs:element ref='wsp:Policy' minOccurs='0' />
        <xs:element ref='wsp:PolicyReference' minOccurs='0' />
        <xs:any namespace='##other' processContents='lax' minOccurs='0' maxOccurs='unbounded' />]]]]>><![CDATA[</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Context" type="xs:anyURI" use="optional"/>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="RequestedSecurityToken" type="wst:RequestedSecurityTokenType"/>
  <xs:complexType name="RequestedSecurityTokenType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <!--WS-Trust Section 3.3-->
  <xs:element name="BinarySecret" type="wst:BinarySecretType"/>
  <xs:complexType name="BinarySecretType">
    <xs:simpleContent>
      <xs:extension base="xs:base64Binary">
        <xs:attribute name="Type" type="wst:BinarySecretTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="BinarySecretTypeEnum">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/AsymmetricKey"/>
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey"/>
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/Nonce"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="BinarySecretTypeOpenEnum">
    <xs:union memberTypes="wst:BinarySecretTypeEnum xs:anyURI"/>
  </xs:simpleType>
  <!--WS-Trust Section 4.1-->
  <xs:element name="Claims" type="wst:ClaimsType"/>
  <xs:complexType name="ClaimsType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Dialect" type="xs:anyURI" use="optional"/>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Entropy" type="wst:EntropyType"/>
  <xs:complexType name="EntropyType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Lifetime" type="wst:LifetimeType"/>
  <xs:complexType name="LifetimeType">
    <xs:sequence>
      <xs:element ref="wsu:Created" minOccurs="0"/>
      <xs:element ref="wsu:Expires" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!--WS-Trust Section 4.2-->
  <xs:element name="RequestSecurityTokenCollection" type="wst:RequestSecurityTokenCollectionType"/>
  <xs:complexType name="RequestSecurityTokenCollectionType">
    <xs:annotation>
      <xs:documentation>The RequestSecurityTokenCollection (RSTC) element is used to provide multiple RST requests. 
        One or more RSTR elements in an RSTRC element are returned in the response to the RequestSecurityTokenCollection.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="RequestSecurityToken" type="wst:RequestSecurityTokenType" minOccurs="2" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RequestSecurityTokenResponseCollection" type="wst:RequestSecurityTokenResponseCollectionType"/>
  <xs:complexType name="RequestSecurityTokenResponseCollectionType">
    <xs:annotation>
      <xs:documentation>The &lt;wst:RequestSecurityTokenResponseCollection> element (RSTRC) MUST be used to return a security token or 
        response to a security token request on the final response.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="wst:RequestSecurityTokenResponse" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <!--WS-Trust Section 4.3-->
  <xs:element name="ComputedKey" type="wst:ComputedKeyOpenEnum"/>
  <xs:simpleType name="ComputedKeyEnum">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/CK/PSHA1"/>
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/CK/HASH"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ComputedKeyOpenEnum">
    <xs:union memberTypes="wst:ComputedKeyEnum xs:anyURI"/>
  </xs:simpleType>
  <xs:element name="RequestedAttachedReference" type="wst:RequestedReferenceType"/>
  <xs:element name="RequestedUnattachedReference" type="wst:RequestedReferenceType"/>
  <xs:complexType name="RequestedReferenceType">
    <xs:sequence>
      <xs:element ref="wsse:SecurityTokenReference"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RequestedProofToken" type="wst:RequestedProofTokenType"/>
  <xs:complexType name="RequestedProofTokenType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <!--WS-Trust Section 6.4-->
  <xs:element name="IssuedTokens" type="wst:RequestSecurityTokenResponseCollectionType"/>
  <!--WS-Trust Section 5-->
  <xs:element name="RenewTarget" type="wst:RenewTargetType"/>
  <xs:complexType name="RenewTargetType">
    <xs:sequence>
      <xs:any namespace="##other" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AllowPostdating" type="wst:AllowPostdatingType"/>
  <xs:complexType name="AllowPostdatingType"/>
  <xs:element name="Renewing" type="wst:RenewingType"/>
  <xs:complexType name="RenewingType">
    <xs:attribute name="Allow" type="xs:boolean" use="optional"/>
    <xs:attribute name="OK" type="xs:boolean" use="optional"/>
  </xs:complexType>
  <!--WS-Trust Section 6-->
  <xs:element name="CancelTarget" type="wst:CancelTargetType"/>
  <xs:complexType name="CancelTargetType">
    <xs:sequence>
      <xs:any namespace="##other" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RequestedTokenCancelled" type="wst:RequestedTokenCancelledType"/>
  <xs:complexType name="RequestedTokenCancelledType"/>
  <!--WS-Trust Section 7-->
  <xs:element name="ValidateTarget" type="wst:ValidateTargetType"/>
  <xs:complexType name="ValidateTargetType">
    <xs:sequence>
      <xs:any namespace="##other" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Status" type="wst:StatusType"/>
  <xs:complexType name="StatusType">
    <xs:sequence>
      <xs:element name="Code" type="wst:StatusCodeOpenEnum"/>
      <xs:element name="Reason" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="StatusCodeEnum">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/status/valid"/>
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/status/invalid"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="StatusCodeOpenEnum">
    <xs:union memberTypes="wst:StatusCodeEnum xs:anyURI"/>
  </xs:simpleType>
  <!--WS-Trust Section 8.2-->
  <xs:element name="SignChallenge" type="wst:SignChallengeType"/>
  <xs:element name="SignChallengeResponse" type="wst:SignChallengeType"/>
  <xs:complexType name="SignChallengeType">
    <xs:sequence>
      <xs:element ref="wst:Challenge"/>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Challenge" type="xs:string"/>
  <!--WS-Trust Section 8.3-->
  <xs:element name="BinaryExchange" type="wst:BinaryExchangeType"/>
  <xs:complexType name="BinaryExchangeType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="ValueType" type="xs:anyURI" use="required"/>
        <xs:attribute name="EncodingType" type="xs:anyURI" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--WS-Trust Section 8.4-->
  <xs:element name="RequestKET" type="wst:RequestKETType"/>
  <xs:complexType name="RequestKETType"/>
  <xs:element name="KeyExchangeToken" type="wst:KeyExchangeTokenType"/>
  <xs:complexType name="KeyExchangeTokenType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--WS-Trust Section 8.9-->
  <xs:element name="Authenticator" type="wst:AuthenticatorType"/>
  <xs:complexType name="AuthenticatorType">
    <xs:sequence>
      <xs:element ref="wst:CombinedHash" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CombinedHash" type="xs:base64Binary"/>
  <!--WS-Trust Section 9.1-->
  <xs:element name="OnBehalfOf" type="wst:OnBehalfOfType"/>
  <xs:complexType name="OnBehalfOfType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Issuer" type="wsa:EndpointReferenceType"/>
  <!--WS-Trust Section 9.2-->
  <xs:element name="AuthenticationType" type="xs:anyURI"/>
  <xs:element name="KeyType" type="wst:KeyTypeOpenEnum"/>
  <xs:simpleType name="KeyTypeEnum">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey"/>
      <xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey"/>
      <xs:enumeration value="http://docs.oasis-open.org/wssx/wstrust/200512/Bearer"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="KeyTypeOpenEnum">
    <xs:union memberTypes="wst:KeyTypeEnum xs:anyURI"/>
  </xs:simpleType>
  <xs:element name="KeySize" type="xs:unsignedInt"/>
  <xs:element name="SignatureAlgorithm" type="xs:anyURI"/>
  <xs:element name="EncryptionAlgorithm" type="xs:anyURI"/>
  <xs:element name="CanonicalizationAlgorithm" type="xs:anyURI"/>
  <xs:element name="ComputedKeyAlgorithm" type="xs:anyURI"/>
  <xs:element name="Encryption" type="wst:EncryptionType"/>
  <xs:complexType name="EncryptionType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ProofEncryption" type="wst:ProofEncryptionType"/>
  <xs:complexType name="ProofEncryptionType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="UseKey" type="wst:UseKeyType"/>
  <xs:complexType name="UseKeyType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="Sig" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="KeyWrapAlgorithm" type="xs:anyURI"/>
  <xs:element name="SignWith" type="xs:anyURI"/>
  <xs:element name="EncryptWith" type="xs:anyURI"/>
  <!--WS-Trust Section 9.3-->
  <xs:element name="DelegateTo" type="wst:DelegateToType"/>
  <xs:complexType name="DelegateToType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Forwardable" type="xs:boolean"/>
  <xs:element name="Delegatable" type="xs:boolean"/>
  <!--WS-Trust Section 9.5-->
  <xs:element name="Participants" type="wst:ParticipantsType"/>
  <xs:complexType name="ParticipantsType">
    <xs:sequence>
      <xs:element name="Primary" type="wst:ParticipantType" minOccurs="0"/>
      <xs:element name="Participant" type="wst:ParticipantType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ParticipantType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/Users/dwolz/git/sandbox/sts/src/main/resources/model/oasis-200401-wss-wssecurity-secext-1.0.xsd</con:url><con:content><![CDATA[<!--OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS's procedures with respect to rights in OASIS specifications can be found at the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification, can be obtained from the OASIS Executive Director.
OASIS invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to implement this specification. Please address the information to the OASIS Executive Director.
Copyright © OASIS Open 2002-2004. All Rights Reserved.
This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself does not be modified in any way, such as by removing the copyright notice or references to OASIS, except as needed for the purpose of developing OASIS specifications, in which case the procedures for copyrights defined in the OASIS Intellectual Property Rights document must be followed, or as required to translate it into languages other than English.
The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns.
This document and the information contained herein is provided on an “AS IS” basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.-->
<xsd:schema targetNamespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" elementFormDefault="qualified" attributeFormDefault="unqualified" blockDefault="#all" version="0.2" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <xsd:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" schemaLocation="./oasis-200401-wss-wssecurity-utility-1.0.xsd"/>
  <xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <xsd:complexType name="AttributedString">
    <xsd:annotation>
      <xsd:documentation>This type represents an element with arbitrary attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute ref="wsu:Id"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PasswordString">
    <xsd:annotation>
      <xsd:documentation>This type is used for password elements per Section 4.1.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="wsse:AttributedString">
        <xsd:attribute name="Type" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EncodedString">
    <xsd:annotation>
      <xsd:documentation>This type is used for elements containing stringified binary data.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="wsse:AttributedString">
        <xsd:attribute name="EncodingType" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="UsernameTokenType">
    <xsd:annotation>
      <xsd:documentation>This type represents a username token per Section 4.1</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Username" type="wsse:AttributedString"/>
      <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute ref="wsu:Id"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="BinarySecurityTokenType">
    <xsd:annotation>
      <xsd:documentation>A security token that is encoded in binary</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="wsse:EncodedString">
        <xsd:attribute name="ValueType" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="KeyIdentifierType">
    <xsd:annotation>
      <xsd:documentation>A security token key identifier</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="wsse:EncodedString">
        <xsd:attribute name="ValueType" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="tUsage">
    <xsd:annotation>
      <xsd:documentation>Typedef to allow a list of usages (as URIs).</xsd:documentation>
    </xsd:annotation>
    <xsd:list itemType="xsd:anyURI"/>
  </xsd:simpleType>
  <xsd:attribute name="Usage" type="tUsage">
    <xsd:annotation>
      <xsd:documentation>This global attribute is used to indicate the usage of a referenced or indicated token within the containing context</xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:complexType name="ReferenceType">
    <xsd:annotation>
      <xsd:documentation>This type represents a reference to an external security token.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="URI" type="xsd:anyURI"/>
    <xsd:attribute name="ValueType" type="xsd:anyURI"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="EmbeddedType">
    <xsd:annotation>
      <xsd:documentation>This type represents a reference to an embedded security token.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:any processContents="lax"/>
    </xsd:choice>
    <xsd:attribute name="ValueType" type="xsd:anyURI"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="SecurityTokenReferenceType">
    <xsd:annotation>
      <xsd:documentation>This type is used reference a security token.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:any processContents="lax"/>
    </xsd:choice>
    <xsd:attribute ref="wsu:Id"/>
    <xsd:attribute ref="wsse:Usage"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="SecurityHeaderType">
    <xsd:annotation>
      <xsd:documentation>This complexType defines header block to use for security-relevant data directed at a specific SOAP actor.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>The use of "any" is to allow extensibility and different forms of security data.</xsd:documentation>
        </xsd:annotation>
      </xsd:any>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="TransformationParametersType">
    <xsd:annotation>
      <xsd:documentation>This complexType defines a container for elements to be specified from any namespace as properties/parameters of a DSIG transformation.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>The use of "any" is to allow extensibility from any namespace.</xsd:documentation>
        </xsd:annotation>
      </xsd:any>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:element name="UsernameToken" type="wsse:UsernameTokenType">
    <xsd:annotation>
      <xsd:documentation>This element defines the wsse:UsernameToken element per Section 4.1.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="BinarySecurityToken" type="wsse:BinarySecurityTokenType">
    <xsd:annotation>
      <xsd:documentation>This element defines the wsse:BinarySecurityToken element per Section 4.2.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Reference" type="wsse:ReferenceType">
    <xsd:annotation>
      <xsd:documentation>This element defines a security token reference</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Embedded" type="wsse:EmbeddedType">
    <xsd:annotation>
      <xsd:documentation>This element defines a security token embedded reference</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="KeyIdentifier" type="wsse:KeyIdentifierType">
    <xsd:annotation>
      <xsd:documentation>This element defines a key identifier reference</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SecurityTokenReference" type="wsse:SecurityTokenReferenceType">
    <xsd:annotation>
      <xsd:documentation>This element defines the wsse:SecurityTokenReference per Section 4.3.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Security" type="wsse:SecurityHeaderType">
    <xsd:annotation>
      <xsd:documentation>This element defines the wsse:Security SOAP header element per Section 4.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="TransformationParameters" type="wsse:TransformationParametersType">
    <xsd:annotation>
      <xsd:documentation>This element contains properties for transformations from any namespace, including DSIG.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Password" type="wsse:PasswordString"/>
  <xsd:element name="Nonce" type="wsse:EncodedString"/>
  <xsd:simpleType name="FaultcodeEnum">
    <xsd:restriction base="xsd:QName">
      <xsd:enumeration value="wsse:UnsupportedSecurityToken"/>
      <xsd:enumeration value="wsse:UnsupportedAlgorithm"/>
      <xsd:enumeration value="wsse:InvalidSecurity"/>
      <xsd:enumeration value="wsse:InvalidSecurityToken"/>
      <xsd:enumeration value="wsse:FailedAuthentication"/>
      <xsd:enumeration value="wsse:FailedCheck"/>
      <xsd:enumeration value="wsse:SecurityTokenUnavailable"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/Users/dwolz/git/sandbox/sts/src/main/resources/model/oasis-200401-wss-wssecurity-utility-1.0.xsd</con:url><con:content><![CDATA[<!--OASIS takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on OASIS's procedures with respect to rights in OASIS specifications can be found at the OASIS website. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification, can be obtained from the OASIS Executive Director.
OASIS invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to implement this specification. Please address the information to the OASIS Executive Director.
Copyright © OASIS Open 2002-2004. All Rights Reserved.
This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself does not be modified in any way, such as by removing the copyright notice or references to OASIS, except as needed for the purpose of developing OASIS specifications, in which case the procedures for copyrights defined in the OASIS Intellectual Property Rights document must be followed, or as required to translate it into languages other than English.
The limited permissions granted above are perpetual and will not be revoked by OASIS or its successors or assigns.
This document and the information contained herein is provided on an “AS IS” basis and OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.-->
<xsd:schema targetNamespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" elementFormDefault="qualified" attributeFormDefault="unqualified" version="0.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
  <!--// Fault Codes ///////////////////////////////////////////-->
  <xsd:simpleType name="tTimestampFault">
    <xsd:annotation>
      <xsd:documentation>This type defines the fault code value for Timestamp message expiration.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:QName">
      <xsd:enumeration value="wsu:MessageExpired"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--// Global attributes ////////////////////////////////////-->
  <xsd:attribute name="Id" type="xsd:ID">
    <xsd:annotation>
      <xsd:documentation>This global attribute supports annotating arbitrary elements with an ID.</xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attributeGroup name="commonAtts">
    <xsd:annotation>
      <xsd:documentation>Convenience attribute group used to simplify this schema.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ref="wsu:Id" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:attributeGroup>
  <!--// Utility types ////////////////////////////////////////-->
  <xsd:complexType name="AttributedDateTime">
    <xsd:annotation>
      <xsd:documentation>This type is for elements whose [children] is a psuedo-dateTime and can have arbitrary attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attributeGroup ref="wsu:commonAtts"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AttributedURI">
    <xsd:annotation>
      <xsd:documentation>This type is for elements whose [children] is an anyURI and can have arbitrary attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:anyURI">
        <xsd:attributeGroup ref="wsu:commonAtts"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!--// Timestamp header components ///////////////////////////-->
  <xsd:complexType name="TimestampType">
    <xsd:annotation>
      <xsd:documentation>This complex type ties together the timestamp related elements into a composite type.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="wsu:Created" minOccurs="0"/>
      <xsd:element ref="wsu:Expires" minOccurs="0"/>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:any namespace="##other" processContents="lax"/>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attributeGroup ref="wsu:commonAtts"/>
  </xsd:complexType>
  <xsd:element name="Timestamp" type="wsu:TimestampType">
    <xsd:annotation>
      <xsd:documentation>This element allows Timestamps to be applied anywhere element wildcards are present,
including as a SOAP header.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!--global element decls to allow individual elements to appear anywhere-->
  <xsd:element name="Expires" type="wsu:AttributedDateTime">
    <xsd:annotation>
      <xsd:documentation>This element allows an expiration time to be applied anywhere element wildcards are present.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Created" type="wsu:AttributedDateTime">
    <xsd:annotation>
      <xsd:documentation>This element allows a creation time to be applied anywhere element wildcards are present.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/Users/dwolz/git/sandbox/sts/src/main/resources/model/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<xsd:schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" version="0.1" elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Basic Types Defined for Signatures-->
  <xsd:simpleType name="CryptoBinary">
    <xsd:restriction base="base64Binary"></xsd:restriction>
  </xsd:simpleType>
  <!--Start Signature-->
  <xsd:element name="Signature" type="ds:SignatureType"/>
  <xsd:complexType name="SignatureType">
    <xsd:sequence>
      <xsd:element ref="ds:SignedInfo"/>
      <xsd:element ref="ds:SignatureValue"/>
      <xsd:element ref="ds:KeyInfo" minOccurs="0"/>
      <xsd:element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="Id" type="ID" use="optional"/>
  </xsd:complexType>
  <xsd:element name="SignatureValue" type="ds:SignatureValueType"/>
  <xsd:complexType name="SignatureValueType">
    <xsd:simpleContent>
      <xsd:extension base="base64Binary"></xsd:extension>
    </xsd:simpleContent>
    <!--<xsd:attribute name="Id" type="ID" use="optional" />-->
  </xsd:complexType>
  <!--Start SignedInfo-->
  <xsd:element name="SignedInfo" type="ds:SignedInfoType"/>
  <xsd:complexType name="SignedInfoType">
    <xsd:sequence>
      <xsd:element ref="ds:CanonicalizationMethod"/>
      <xsd:element ref="ds:SignatureMethod"/>
      <xsd:element ref="ds:Reference" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="Id" type="ID" use="optional"/>
  </xsd:complexType>
  <xsd:element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <xsd:complexType name="CanonicalizationMethodType" mixed="true">
    <xsd:sequence>
      <!--(0,unbounded) elements from (1,1) namespace-->
      <xsd:any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="Algorithm" type="anyURI" use="required"/>
  </xsd:complexType>
  <xsd:element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <xsd:complexType name="SignatureMethodType" mixed="true">
    <xsd:sequence>
      <xsd:element name="HMACOutputLength" minOccurs="0" type="ds:HMACOutputLengthType"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
      <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="Algorithm" type="anyURI" use="required"/>
  </xsd:complexType>
  <!--Start Reference-->
  <xsd:element name="Reference" type="ds:ReferenceType"/>
  <xsd:complexType name="ReferenceType">
    <xsd:sequence>
      <xsd:element ref="ds:Transforms" minOccurs="0"/>
      <xsd:element ref="ds:DigestMethod"/>
      <xsd:element ref="ds:DigestValue"/>
    </xsd:sequence>
    <xsd:attribute name="Id" type="ID" use="optional"/>
    <xsd:attribute name="URI" type="anyURI" use="optional"/>
    <xsd:attribute name="Type" type="anyURI" use="optional"/>
  </xsd:complexType>
  <xsd:element name="Transforms" type="ds:TransformsType"/>
  <xsd:complexType name="TransformsType">
    <xsd:sequence>
      <xsd:element ref="ds:Transform" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Transform" type="ds:TransformType"/>
  <xsd:complexType name="TransformType" mixed="true">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <!--(1,1) elements from (0,unbounded) namespaces-->
      <xsd:any namespace="##other" processContents="lax"/>
      <xsd:element name="XPath" type="string"/>
    </xsd:choice>
    <xsd:attribute name="Algorithm" type="anyURI" use="required"/>
  </xsd:complexType>
  <!--End Reference-->
  <xsd:element name="DigestMethod" type="ds:DigestMethodType"/>
  <xsd:complexType name="DigestMethodType" mixed="true">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="Algorithm" type="anyURI" use="required"/>
  </xsd:complexType>
  <xsd:element name="DigestValue" type="ds:DigestValueType"/>
  <xsd:simpleType name="DigestValueType">
    <xsd:restriction base="base64Binary"/>
  </xsd:simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <xsd:element name="KeyInfo" type="ds:KeyInfoType"/>
  <xsd:complexType name="KeyInfoType" mixed="true">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element ref="ds:KeyName"/>
      <xsd:element ref="ds:KeyValue"/>
      <xsd:element ref="ds:RetrievalMethod"/>
      <xsd:element ref="ds:X509Data"/>
      <xsd:element ref="ds:PGPData"/>
      <xsd:element ref="ds:SPKIData"/>
      <xsd:element ref="ds:MgmtData"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
      <xsd:any processContents="lax" namespace="##other"/>
    </xsd:choice>
    <xsd:attribute name="Id" type="ID" use="optional"/>
  </xsd:complexType>
  <xsd:element name="KeyName" type="string"/>
  <xsd:element name="MgmtData" type="string"/>
  <xsd:element name="KeyValue" type="ds:KeyValueType"/>
  <xsd:complexType name="KeyValueType" mixed="true">
    <xsd:choice>
      <xsd:element ref="ds:DSAKeyValue"/>
      <xsd:element ref="ds:RSAKeyValue"/>
      <xsd:any namespace="##other" processContents="lax"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <xsd:complexType name="RetrievalMethodType">
    <xsd:sequence>
      <xsd:element ref="ds:Transforms" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="URI" type="anyURI"/>
    <xsd:attribute name="Type" type="anyURI" use="optional"/>
  </xsd:complexType>
  <!--Start X509Data-->
  <xsd:element name="X509Data" type="ds:X509DataType"/>
  <xsd:complexType name="X509DataType">
    <xsd:sequence maxOccurs="unbounded">
      <xsd:choice>
        <xsd:element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <xsd:element name="X509SKI" type="base64Binary"/>
        <xsd:element name="X509SubjectName" type="string"/>
        <xsd:element name="X509Certificate" type="base64Binary"/>
        <xsd:element name="X509CRL" type="base64Binary"/>
        <xsd:any namespace="##other" processContents="lax"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="X509IssuerSerialType">
    <xsd:sequence>
      <xsd:element name="X509IssuerName" type="string"/>
      <xsd:element name="X509SerialNumber" type="integer"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <xsd:element name="PGPData" type="ds:PGPDataType"/>
  <xsd:complexType name="PGPDataType">
    <xsd:choice>
      <xsd:sequence>
        <xsd:element name="PGPKeyID" type="base64Binary"/>
        <xsd:element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="PGPKeyPacket" type="base64Binary"/>
        <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <xsd:element name="SPKIData" type="ds:SPKIDataType"/>
  <xsd:complexType name="SPKIDataType">
    <xsd:sequence maxOccurs="unbounded">
      <xsd:element name="SPKISexp" type="base64Binary"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <xsd:element name="Object" type="ds:ObjectType"/>
  <xsd:complexType name="ObjectType" mixed="true">
    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
      <xsd:any namespace="##any" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Id" type="ID" use="optional"/>
    <!--add a grep facet-->
    <xsd:attribute name="MimeType" type="string" use="optional"/>
    <xsd:attribute name="Encoding" type="anyURI" use="optional"/>
  </xsd:complexType>
  <xsd:element name="Manifest" type="ds:ManifestType"/>
  <xsd:complexType name="ManifestType">
    <xsd:sequence>
      <xsd:element ref="ds:Reference" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="Id" type="ID" use="optional"/>
  </xsd:complexType>
  <xsd:element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <xsd:complexType name="SignaturePropertiesType">
    <xsd:sequence>
      <xsd:element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="Id" type="ID" use="optional"/>
  </xsd:complexType>
  <xsd:element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <xsd:complexType name="SignaturePropertyType" mixed="true">
    <xsd:choice maxOccurs="unbounded">
      <!--(1,1) elements from (1,unbounded) namespaces-->
      <xsd:any namespace="##other" processContents="lax"/>
    </xsd:choice>
    <xsd:attribute name="Target" type="anyURI" use="required"/>
    <xsd:attribute name="Id" type="ID" use="optional"/>
  </xsd:complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <xsd:simpleType name="HMACOutputLengthType">
    <xsd:restriction base="integer"/>
  </xsd:simpleType>
  <!--Start KeyValue Element-types-->
  <xsd:element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <xsd:complexType name="DSAKeyValueType">
    <xsd:sequence>
      <xsd:sequence minOccurs="0">
        <xsd:element name="P" type="ds:CryptoBinary"/>
        <xsd:element name="Q" type="ds:CryptoBinary"/>
      </xsd:sequence>
      <xsd:element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <xsd:element name="Y" type="ds:CryptoBinary"/>
      <xsd:element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <xsd:sequence minOccurs="0">
        <xsd:element name="Seed" type="ds:CryptoBinary"/>
        <xsd:element name="PgenCounter" type="ds:CryptoBinary"/>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <xsd:complexType name="RSAKeyValueType">
    <xsd:sequence>
      <xsd:element name="Modulus" type="ds:CryptoBinary"/>
      <xsd:element name="Exponent" type="ds:CryptoBinary"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/Users/dwolz/git/sandbox/sts/src/main/resources/model/ws-policy.xsd</con:url><con:content><![CDATA[<!--(c) 2001-2006 BEA Systems Inc., International Business Machines Corporation, Microsoft Corporation, Inc., SAP AG, Sonic Software, and VeriSign, Inc. All rights reserved.

Permission to copy and display the WS-Policy Specification (the "Specification", which includes WSDL and schema documents), in any medium without fee or royalty is hereby granted, provided that you include the following on ALL copies of the WS-Policy Specification, that you make:

1.	A link or URL to the WS-Policy Specification at one of the Authors' websites
2.	The copyright notice as shown in the WS-Policy Specification.

BEA Systems, IBM, Microsoft, SAP, Sonic Software, and VeriSign (collectively, the "Authors") each agree to grant you a license, under royalty-free and otherwise reasonable, non-discriminatory terms and conditions, to their respective essential patent claims that they deem necessary to implement the WS-Policy Specification.

THE WS-POLICY SPECIFICATION IS PROVIDED "AS IS," AND THE AUTHORS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE WS-POLICY SPECIFICATION ARE SUITABLE FOR ANY PURPOSE; NOR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.

THE AUTHORS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THE WS-POLICY SPECIFICATION.

The name and trademarks of the Authors may NOT be used in any manner, including advertising or publicity pertaining to the WS-Policy Specification or its contents without specific, written prior permission. Title to copyright in the WS-Policy Specification will at all times remain with the Authors.

No other rights are granted by implication, estoppel or otherwise.-->
<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2004/09/policy" elementFormDefault="qualified" blockDefault="#all" xmlns:tns="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
  <xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" schemaLocation="./oasis-200401-wss-wssecurity-secext-1.0.xsd"/>
  <xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" schemaLocation="./oasis-200401-wss-wssecurity-utility-1.0.xsd"/>
  <!--////////// WS-Policy //////////-->
  <xs:element name="Policy">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tns:OperatorContentType">
          <xs:attribute name="Name" type="xs:anyURI"/>
          <xs:attribute ref="wsu:Id"/>
          <xs:anyAttribute namespace="##any" processContents="lax"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="All" type="tns:OperatorContentType"/>
  <xs:element name="ExactlyOne" type="tns:OperatorContentType"/>
  <xs:complexType name="OperatorContentType">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="tns:Policy"/>
        <xs:element ref="tns:All"/>
        <xs:element ref="tns:ExactlyOne"/>
        <xs:element ref="tns:PolicyReference"/>
        <xs:any namespace="##other" processContents="lax"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PolicyReference">
    <xs:complexType>
      <xs:attribute name="URI" type="xs:anyURI" use="required"/>
      <xs:attribute name="Digest" type="xs:base64Binary"/>
      <xs:attribute name="DigestAlgorithm" type="xs:anyURI" default="http://schemas.xmlsoap.org/ws/2004/09/policy/Sha1Exc"/>
      <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
  </xs:element>
  <xs:attribute name="Optional" type="xs:boolean" default="false"/>
  <!--////////// WS-PolicyAttachment //////////-->
  <xs:attribute name="PolicyURIs">
    <xs:simpleType>
      <xs:list itemType="xs:anyURI"/>
    </xs:simpleType>
  </xs:attribute>
  <xs:element name="PolicyAttachment">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="tns:AppliesTo"/>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="tns:Policy"/>
          <xs:element ref="tns:PolicyReference"/>
        </xs:choice>
        <!--omitted only because it causes the content model to be non-determistic
        <xs:element ref="wsse:Security" minOccurs="0" />-->
        <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AppliesTo">
    <xs:complexType>
      <xs:sequence>
        <xs:any namespace="##any" processContents="lax" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/Users/dwolz/git/sandbox/sts/src/main/resources/model/ws-addr.xsd</con:url><con:content><![CDATA[<!--W3C XML Schema defined in the Web Services Addressing 1.0 specification
    http://www.w3.org/TR/ws-addr-core

   Copyright © 2005 World Wide Web Consortium,

   (Massachusetts Institute of Technology, European Research Consortium for
   Informatics and Mathematics, Keio University). All Rights Reserved. This
   work is distributed under the W3C® Software License [1] in the hope that
   it will be useful, but WITHOUT ANY WARRANTY; without even the implied
   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

   [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231

   $Id: ws-addr.xsd,v 1.2 2008/07/23 13:38:16 plehegar Exp $-->
<xs:schema targetNamespace="http://www.w3.org/2005/08/addressing" blockDefault="#all" elementFormDefault="qualified" finalDefault="" attributeFormDefault="unqualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType" mixed="false">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element ref="tns:ReferenceParameters" minOccurs="0"/>
      <xs:element ref="tns:Metadata" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ReferenceParameters" type="tns:ReferenceParametersType"/>
  <xs:complexType name="ReferenceParametersType" mixed="false">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType name="MetadataType" mixed="false">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType name="RelatesToType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional" default="http://www.w3.org/2005/08/addressing/reply"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType name="AttributedURIType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType name="AttributedUnsignedLongType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType name="AttributedQNameType" mixed="false">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType name="ProblemActionType" mixed="false">
    <xs:sequence>
      <xs:element ref="tns:Action" minOccurs="0"/>
      <xs:element name="SoapAction" minOccurs="0" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:18080/SecurityTokenServiceProvider/</con:endpoint><con:endpoint>http://localhost:8080/sts/SecurityTokenService</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Cancel" name="Cancel" bindingOperationName="Cancel" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue" name="Issue" bindingOperationName="Issue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="x509Saml1.1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/sts/SecurityTokenService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <wst:RequestSecurityToken xmlns:wst="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
         <wst:SecondaryParameters>
            <KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey</KeyType>
         </wst:SecondaryParameters>
         <wst:RequestType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue</wst:RequestType>
         <wst:TokenType>urn:oasis:names:tc:SAML:1.0:assertion</wst:TokenType>
         <wst:UseKey>
            <dsig:KeyInfo xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
               <ds:X509Data xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
                  <ds:X509Certificate>MIICsjCCAhsCBRI0VniSMA0GCSqGSIb3DQEBBQUAMIGjMQswCQYDVQQGEwJVQTEQMA4GA1UECAwH
THVnYW5zazEQMA4GA1UEBwwHTHVnYW5zazESMBAGA1UECgwJSW5mb3B1bHNlMRMwEQYDVQQLDApU
YWxlbmRUZWFtMRkwFwYDVQQDDBBQYXZlbFZhc2lsY2hlbmtvMSwwKgYJKoZIhvcNAQkBFh1QYXZl
bC5TLlZhc2lsY2hlbmtvQGdtYWlsLmNvbTAeFw0xMTAyMjMxMjA4NDVaFw0yMTAyMjAxMjA4NDVa
MIGaMRowGAYDVQQDExFUYWxlbmRDZXJ0aWZpY2F0ZTEPMA0GA1UECxMGVGFsZW5kMQ8wDQYDVQQK
EwZUYWxlbmQxEzARBgNVBAcTCkN1c3RvbUNpdHkxFDASBgNVBAgTC0N1c3RvbVN0YXRlMQswCQYD
VQQGEwJERTEiMCAGCSqGSIb3DQEJARYTZXhhbXBsZUBleGFtcGxlLmNvbTCBnzANBgkqhkiG9w0B
AQEFAAOBjQAwgYkCgYEAqD49IHig6rd9p5NTF0YzI+XMlUZThG5Us1DdcOUpPTp2i5m3wukWlRXF
d4BZcp+PClbvyuNr/8kF0rDcxejvqMZrloQ1h4ncJvSW9udULh+M53vynuhSTDQWVWIOPxbREInN
kx1kTm/uqhWf8JtewW6maH3Pz4Ll6Hcj8KWsnIUCAwEAATANBgkqhkiG9w0BAQUFAAOBgQB+EALh
JN+LKDtTLSpgA3osgXmyV7UfKujTH/RQwGkMyM8KBzhaXvLgfLrcNrVFNzvv/BcWs2vxc15r0Rmk
AaSkpZig0scWR98mUW466xoh3cbbt4Dj7hmiinvyBingVdn3Z2IjRzfW2aACsMgk8e5kyhHdRY8O
MucKxrDaQn0amg==</ds:X509Certificate>
               </ds:X509Data>
            </dsig:KeyInfo>
         </wst:UseKey>
      </wst:RequestSecurityToken>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue"/><con:wsrmConfig version="1.2"/></con:call><con:call name="x509Saml2.0" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/sts/SecurityTokenService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <wst:RequestSecurityToken xmlns:wst="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
         <wst:SecondaryParameters>
            <KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey</KeyType>
         </wst:SecondaryParameters>
         <wst:RequestType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue</wst:RequestType>
         <wst:TokenType>urn:oasis:names:tc:SAML:2.0:assertion</wst:TokenType>
         <wst:UseKey>
            <dsig:KeyInfo xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
               <ds:X509Data xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
                  <ds:X509Certificate>MIICsjCCAhsCBRI0VniSMA0GCSqGSIb3DQEBBQUAMIGjMQswCQYDVQQGEwJVQTEQMA4GA1UECAwH
THVnYW5zazEQMA4GA1UEBwwHTHVnYW5zazESMBAGA1UECgwJSW5mb3B1bHNlMRMwEQYDVQQLDApU
YWxlbmRUZWFtMRkwFwYDVQQDDBBQYXZlbFZhc2lsY2hlbmtvMSwwKgYJKoZIhvcNAQkBFh1QYXZl
bC5TLlZhc2lsY2hlbmtvQGdtYWlsLmNvbTAeFw0xMTAyMjMxMjA4NDVaFw0yMTAyMjAxMjA4NDVa
MIGaMRowGAYDVQQDExFUYWxlbmRDZXJ0aWZpY2F0ZTEPMA0GA1UECxMGVGFsZW5kMQ8wDQYDVQQK
EwZUYWxlbmQxEzARBgNVBAcTCkN1c3RvbUNpdHkxFDASBgNVBAgTC0N1c3RvbVN0YXRlMQswCQYD
VQQGEwJERTEiMCAGCSqGSIb3DQEJARYTZXhhbXBsZUBleGFtcGxlLmNvbTCBnzANBgkqhkiG9w0B
AQEFAAOBjQAwgYkCgYEAqD49IHig6rd9p5NTF0YzI+XMlUZThG5Us1DdcOUpPTp2i5m3wukWlRXF
d4BZcp+PClbvyuNr/8kF0rDcxejvqMZrloQ1h4ncJvSW9udULh+M53vynuhSTDQWVWIOPxbREInN
kx1kTm/uqhWf8JtewW6maH3Pz4Ll6Hcj8KWsnIUCAwEAATANBgkqhkiG9w0BAQUFAAOBgQB+EALh
JN+LKDtTLSpgA3osgXmyV7UfKujTH/RQwGkMyM8KBzhaXvLgfLrcNrVFNzvv/BcWs2vxc15r0Rmk
AaSkpZig0scWR98mUW466xoh3cbbt4Dj7hmiinvyBingVdn3Z2IjRzfW2aACsMgk8e5kyhHdRY8O
MucKxrDaQn0amg==</ds:X509Certificate>
               </ds:X509Data>
            </dsig:KeyInfo>
         </wst:UseKey>
      </wst:RequestSecurityToken>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue"/><con:wsrmConfig version="1.2"/></con:call><con:call name="usernameSaml1.1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/sts/SecurityTokenService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-1" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>joe</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">joespassword</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <wst:RequestSecurityToken xmlns:wst="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
         <wst:RequestType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue</wst:RequestType>
         <wst:TokenType>urn:oasis:names:tc:SAML:1.0:assertion</wst:TokenType>
         <wst:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey</wst:KeyType>
         <wst:KeySize>256</wst:KeySize>
      </wst:RequestSecurityToken>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue"/><con:wsrmConfig version="1.2"/></con:call><con:call name="usernameSaml2.0" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/sts/SecurityTokenService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-1" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>joe</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">joespassword</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <wst:RequestSecurityToken xmlns:wst="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
         <wst:RequestType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue</wst:RequestType>
         <wst:TokenType>urn:oasis:names:tc:SAML:2.0:assertion</wst:TokenType>
         <wst:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey</wst:KeyType>
         <wst:KeySize>256</wst:KeySize>
      </wst:RequestSecurityToken>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue"/><con:wsrmConfig version="1.2"/></con:call><con:call name="wrongX509Saml1.1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/sts/SecurityTokenService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <wst:RequestSecurityToken xmlns:wst="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
         <wst:SecondaryParameters>
            <KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey</KeyType>
         </wst:SecondaryParameters>
         <wst:RequestType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue</wst:RequestType>
         <wst:TokenType>urn:oasis:names:tc:SAML:1.0:assertion</wst:TokenType>
         <wst:UseKey>
            <dsig:KeyInfo xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
               <ds:X509Data xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
                  <ds:X509Certificate>MIIBkzCB/QIEP8PwHTANBgkqhkiG9w0BAQQFADARMQ8wDQYDVQQDEwZjbGllbnQwHhcNMDMxMTI2
MDAxMzE3WhcNMDQwMjI0MDAxMzE3WjARMQ8wDQYDVQQDEwZjbGllbnQwgZ8wDQYJKoZIhvcNAQEB
BQADgY0AMIGJAoGBAPTLB2Xs9pIbCR2LFZjg9MaMlhV0lJexSRj4GWPqnpio0R3IIrcArx8a4u+K
7M2zvTjjD5HSe8dveN3tzYFpRjDcxgyegQQJ8zCm/2n3ZwODuHE6r11IqJA4Af1vbLjVk9KeyHJy
JZvjrCpF7SVLUNj8Da0ak5C5jjdLuxU4XO73AgMBAAEwDQYJKoZIhvcNAQEEBQADgYEAnu8FZE6k
6yAI746kmLa6AhdxV3C9p9SoT5/WS0XRhIuo6yGN9JbokF0ZSQox53eitUQ+ac+YUJUd0Yd8zSho
Lo7qUyd6xgkOG2SnUM5jdNHPdJYV5LsTWum3eP4hXGdTiZ2BUk1f4yRu++dxtvRLQdoi4uRL6NUg
Sa/PtCEqBQo=</ds:X509Certificate>
               </ds:X509Data>
            </dsig:KeyInfo>
         </wst:UseKey>
      </wst:RequestSecurityToken>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue"/><con:wsrmConfig version="1.2"/></con:call><con:call name="wrongUsernameSaml1.1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/sts/SecurityTokenService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-1" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>joe2</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">joespassword</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <wst:RequestSecurityToken xmlns:wst="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
         <wst:RequestType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue</wst:RequestType>
         <wst:TokenType>urn:oasis:names:tc:SAML:1.0:assertion</wst:TokenType>
         <wst:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey</wst:KeyType>
         <wst:KeySize>256</wst:KeySize>
      </wst:RequestSecurityToken>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/KeyExchangeToken" name="KeyExchangeToken" bindingOperationName="KeyExchangeToken" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Renew" name="Renew" bindingOperationName="Renew" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/RequestCollection" name="RequestCollection" bindingOperationName="RequestCollection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Validate" name="Validate" bindingOperationName="Validate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:properties/><con:wssContainer/></con:soapui-project>