<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<bean id="securityTokenServiceProviderBean"
		class="org.apache.esb.sts.provider.SecurityTokenServiceImpl">
		<property name="cancelOperation" ref="cancelDelegate"/>
		<property name="issueOperation" ref="issueDelegate"/>
		<property name="keyExchangeTokenOperation" ref="keyExchangeTokenDelegate"/>
		<property name="renewOperation" ref="renewDelegate"/>
		<property name="requestCollectionOperation" ref="requestCollectionDelegate"/>
		<property name="validateOperation" ref="validateDelegate"/>
		
	</bean>	
		
	<bean id="cancelDelegate"
		class="org.apache.esb.sts.provider.operation.CancelDelegate"/>
	<bean id="issueDelegate"
		class="org.apache.esb.sts.provider.operation.IssueDelegate">
		<property name="passwordCallback" ref="passwordCallback"/>
		<property name="tokenProviders" ref="tokenProviders"/>
		<property name="certificateVerifierConfig" ref="certificateVerifierConfig"/>
	</bean>
	<bean id="keyExchangeTokenDelegate"
		class="org.apache.esb.sts.provider.operation.KeyExchangeTokenDelegate"/>
	<bean id="renewDelegate"
		class="org.apache.esb.sts.provider.operation.RenewDelegate"/>
	<bean id="requestCollectionDelegate"
		class="org.apache.esb.sts.provider.operation.RequestCollectionDelegate"/>
	<bean id="validateDelegate"
		class="org.apache.esb.sts.provider.operation.ValidateDelegate"/>

	<jaxws:endpoint id="SecurityTokenService"
		implementor="#securityTokenServiceProviderBean"
		address="/SecurityTokenService" >
		<jaxws:inInterceptors>
			<!-- SAAJ Interceptor needs to be explicitly declared only in CXF 2.0.x --> 
			<bean class="org.apache.cxf.binding.soap.saaj.SAAJInInterceptor"/>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<constructor-arg>
					<map>
						<entry key="action" value="UsernameToken"/>
						<entry key="passwordType" value="PasswordText"/>
						<entry key="passwordCallbackRef">
							<ref bean="passwordCallback"/>
						</entry>
					</map>
				</constructor-arg>
				<property name="ignoreActions" value="true"/>
			</bean>
		</jaxws:inInterceptors>
	</jaxws:endpoint>

	<bean id="passwordCallback"
		class="org.apache.esb.sts.provider.ProviderPasswordCallback"/>

	<util:list id="tokenProviders">
		<ref bean="saml1TokenProvider"/>
		<ref bean="saml2TokenProvider"/>
	</util:list>
	
	<bean id="saml1TokenProvider"
		class="org.apache.esb.sts.provider.token.Saml1TokenProvider"/>
	<bean id="saml2TokenProvider"
		class="org.apache.esb.sts.provider.token.Saml2TokenProvider"/>
	<bean id="certificateVerifierConfig"
		class="org.apache.esb.sts.provider.cert.CertificateVerifierConfig">
		<property name="storePath" value="/sts.jks"/>
		<property name="storePwd" value="atleast8"/>
		<property name="keyCertAlias" value="cacert"/>
		<property name="keySignAlias" value="securitytokenserviceprovider"/>
		<property name="keySignPwd" value="empty"/>
	</bean>
</beans>
